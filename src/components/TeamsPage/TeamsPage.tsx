/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { useState, useEffect } from 'react';
import { IconButton, MenuItem, Typography} from '@mui/material';
import { styled } from '@mui/material/styles';
import Button from '@mui/material/Button/Button';
import Badge from '@mui/material/Badge/Badge';
import TextField from '@mui/material/TextField/TextField';
import Drawer from '@mui/material/Drawer/Drawer';
import AppBar from '@mui/material/AppBar/AppBar';
import Toolbar from '@mui/material/Toolbar';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import UserAvatarIcon from '@mui/icons-material/Face';
import Menu from '@mui/material/Menu';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemText from '@mui/material/ListItemText';
import AddIcon from '@mui/icons-material/Add';
import MenuIcon from '@mui/icons-material/Menu';

import { TeamsPageProps } from 'src/types';

const drawerWidth = 125;

const TeamsPage1: any = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height: `765px`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
});

const TeamsPageAppBar: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `1440px`,
  left: `0px`,
  top: `0px`,
});

const Paper1: any = styled('div')(({ theme }: any) => ({
  background: `linear-gradient(.25turn, #000000, 70%, #ff6900)`,
  boxShadow: `0px 2px 4px rgba(0, 0, 0, 0.2), 0px 4px 5px rgba(0, 0, 0, 0.14), 0px 1px 10px rgba(0, 0, 0, 0.12)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const TeamsGridMenuButton: any = styled(IconButton)(({ theme }: any) => ({
  position: `absolute`,
  left: `1392px`,
  top: `69px`,
}));

const TeamsGridAddButton: any = styled(IconButton)(({ theme }: any) => ({
  position: `absolute`,
  left: `1364px`,
  top: `69px`,
}));

const TeamsGrid: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `1303px`,
  height: `692px`,
  left: `129px`,
  top: `73px`,
});

const GridToolbarQuickFilt: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `4px 0px 0px 4px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Actions: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `397px`,
  margin: `0px`,
});

const Button2: any = styled(Button)(({ theme }: any) => ({
  margin: `0px`,
}));

const Button3: any = styled(Button)(({ theme }: any) => ({
  margin: `0px 0px 0px 8px`,
}));

const Button4: any = styled(Button)(({ theme }: any) => ({
  margin: `0px 0px 0px 8px`,
}));

const Button5: any = styled(Button)(({ theme }: any) => ({
  margin: `0px 0px 0px 8px`,
}));

const Badge2: any = styled(Badge)(({ theme }: any) => ({
  position: `absolute`,
  left: `115px`,
  top: `-7px`,
}));

const QuickFilter: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const TextField2: any = styled(TextField)(({ theme }: any) => ({
  width: `220px`,
  margin: `0px`,
}));

const TeamsPageSideDrawer: any = styled(Drawer)(({ theme }: any) => ({
  width: `114px`,
  height: `701px`,
  position: `absolute`,
  left: `0px`,
  top: `64px`,
}));

const Toolbar1: any = styled(Toolbar)({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 24px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const LeftSide: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Typography1: any = styled(Typography)(({ theme }: any) => ({
  margin: `0px`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `20px`,
  letterSpacing: `0.15000000596046448px`,
  textDecoration: `none`,
  lineHeight: `160.0000023841858%`,
  textTransform: `none`,
}));

const MinHeight: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  width: `0px`,
  height: `64px`,
  margin: `0px`,
});

const UserAvatarStack: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const UserAvatarButton: any = styled(IconButton)(({ theme }: any) => ({
  margin: `0px 0px 0px 16px`,
}));

const TeamGridAddButton: any = styled(IconButton)(({ theme }: any) => ({
  position: `absolute`,
  left: `1370px`,
  top: `88px`,
}));

const TeamsGridAddIcon: any = styled(AddIcon)(({ theme }: any) => ({
//  position: `absolute`,
//  left: `1373px`,
//  top: `88px`,
}));

const TeamGridMenuButton: any = styled(IconButton)(({ theme }: any) => ({
  position: `absolute`,
  left: `1403px`,
  top: `88px`,
}));

const TeamsGridMenuIcon: any = styled(MenuIcon)(({ theme }: any) => ({
//    position: `absolute`,
//    left: `1403px`,
//    top: `88px`,
  }));

function TeamsPage(props: TeamsPageProps): JSX.Element {
  const [openManageUserAccountModal, setOpenManageUserAccountModal] = useState(false);
  const [selectedValue, setSelectedValue] = useState('test');
  const [openAddTeamModal, setOpenAddTeamModal] = useState(false);

  const handleClickOpenManageUserAccountModal = () => {
    console.log("Open ManageUserAccountModal1");
    setOpenManageUserAccountModal(true);
  };

  const handleCloseManageUserAccountModal = (value: string) => {
    console.log("Close ManageUserAccountModal1");
    setOpenManageUserAccountModal(false);
    setSelectedValue(value);
  };

  const handleClickOpenAddTeamModal = () => {
    console.log("Open AddTeamModal1");
    setOpenAddTeamModal(true);
  };

  const [anchorEl, setAnchorEl] = useState(null);
  const handleTeamGridMenuOpen = (event) => {
    console.log("Open Team Grid Menu");
    setAnchorEl(event.currentTarget);
  };
  const handleTeamGridMenuClose = () => {
    console.log("Close Team Grid Menu")
    setAnchorEl(null);
  };

  const handleAction_deleteTeams = () => {
    console.log("Invoking Grid Menu Action - Deleting Teams");

    displayDeleteConfirmationDialog();
    handleTeamGridMenuClose();
  }

  const displayDeleteConfirmationDialog = () => {
    console.log("Displaying Delete Confirmation Dialog");
    //console.log("selectedTeamRowIDs " + selectedTeamRowIDs);
    //setSelectedTeams(getSelectedTeams(selectedTeamRowIDs));
    //setOpenDeleteTeamsConfirmationDialog(true);
  };


  return (
    <TeamsPage1 className={props.className}>
      <Box sx={{ display: 'flex' }}>
        <CssBaseline />
        <TeamsPageAppBar position="fixed" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>
          <Paper1>
            <Toolbar1>
              <LeftSide>
                <Button href="/">
                  <Typography1 variant={'body1'} gutterBottom={false}>
                    IMControl
                  </Typography1>
                </Button>
              </LeftSide>
              <MinHeight></MinHeight>
              <UserAvatarStack>
                <UserAvatarButton onClick = {handleClickOpenManageUserAccountModal}>
                  <UserAvatarIcon />
                </UserAvatarButton>
              </UserAvatarStack>
            </Toolbar1>
          </Paper1>
        </TeamsPageAppBar>
        <Drawer
          variant="permanent"
          sx={{
              width: drawerWidth,
              flexShrink: 0,
              [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },
            }}
        >
          <Toolbar />
          <Box sx={{ overflow: 'auto' }}>
          <List>
            {['Teams', 'Users', 'Archives'].map((text, index) => {
              const relativeURL = '/' + text;
              
              return (
                <ListItem key={text} disablePadding selected={text === 'Teams'}>
                <ListItemButton href={relativeURL}>
                  <ListItemText primary={text} />
                </ListItemButton>
              </ListItem>
              );
              }
            )
            }
          </List>
          </Box>
        </Drawer>
        <TeamGridAddButton onClick = {handleClickOpenAddTeamModal}>
          <TeamsGridAddIcon />
        </TeamGridAddButton>
        <TeamGridMenuButton aria-controls="simple-menu"
            aria-haspopup="true"
            onClick={handleTeamGridMenuOpen}
            aria-label="Open to show more"
            title="Open to show more">
            <TeamsGridMenuIcon />
        </TeamGridMenuButton>
        <Menu
            id="basic-menu"
            open={Boolean(anchorEl)}
            anchorEl={anchorEl}
            anchorOrigin={{
                vertical: 'bottom',
                horizontal: 'right',
            }}
            transformOrigin={{
                vertical: 'top',
                horizontal: 'right',
            }}
        >
            <MenuItem onClick={handleAction_deleteTeams}>Delete Team(s)</MenuItem>
        </Menu>
      </Box>
    </TeamsPage1>
  );
}

export default TeamsPage;
